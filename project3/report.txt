Shreya Chatterjee

a. The main obstacle I overcame was figuring out how to design the functions. Once I figured that out, I was able to write and debug them. 

b. First, my program checks if the rower string is valid. It does this by checking each part of the string, such as minutes, seconds, etc. It uses a lot of nested ifs, and if every single 'if' statement is true, then the program will return true. Additionally, I wrote helper functions to clean up my code a little and do necessary things such as find the colon between the minutes and seconds. Each of the functions that returns a value first checks if the string is valid, and then runs through the string until it finds the desired value. 

c.
1. string: "60:60 28 s/m 40 m 100" 
	output: all functions return -1, not a valid rower string
	reason: minutes and seconds cannot be 60
2. string: "1:14 30     s/m 42 m 111"
	output: all functions return -1, not a valid string
	reason: there cannot be space between 30 and s/m
3. string: "1:14 28 s/m 42 mmm 111"
	output: all functions return -1, not a valid string
	reason: there cannot be multiple m's 
4. string: "1:14 28 s/m 42 m 1232131"
	output: all functions return -1, not a valid string
	reason: heart rate is not valid 
5. string: "1:14 28 s/m 42 m 111asdfsf"
	output: all functions return -1, not a valid string
	reason: cannot be extra characters after the heart rate
6. string: "1:14 28 s/m 42 m 110"
	output: 1 minute, 14 seconds, 28 strokes per min, 42 meters, 110 heart rate
	reason: valid string
7. string: "1:04 28 s/m 42 m 110"
	output: 1 minute, 4 seconds, 28 strokes per min, 42 meters, 110 heart rate
	reason: test if function still returns 4 seconds with the 0 in front 
8. string: "59:59 999 s/m 40 m 999" 
	output: 59 mins, 59 seconds, 999 s/m, 40 meters, 999 heart rate
	reason: test highest values 
9. string: ":00 1 s/m 0 m 1"
	output: 
	reason: test smallest possible values
10. string: ":00 0 s/m 0 m 0"
	output: all functions return -1, not a valid string
	reason: test all 0s

